;;
;; Header files for TweetfiWallet
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_create_address
slice __tact_create_address(int chain, int hash) inline;

;; __tact_compute_contract_address
slice __tact_compute_contract_address(int chain, cell code, cell data) inline;

;; __tact_my_balance
int __tact_my_balance() inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_dict_set_int_int
(cell, ()) __tact_dict_set_int_int(cell d, int kl, int k, int v, int vl) inline;

;; __tact_dict_get_int_int
int __tact_dict_get_int_int(cell d, int kl, int k, int vl) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; __tact_int_neq_nullable_one
int __tact_int_neq_nullable_one(int a, int b) inline;

;; __tact_dict_set_code
cell __tact_dict_set_code(cell dict, int id, cell code) inline;

;; __tact_dict_get_code
cell __tact_dict_get_code(cell dict, int id) inline;

;; __tact_int_to_string
slice __tact_int_to_string(int src) inline_ref;

;; $JettonTransfer$_load
(slice, ((int, int, slice, slice, cell, int, slice))) $JettonTransfer$_load(slice sc_0) inline_ref;

;; $JettonTransferNotification$_store
builder $JettonTransferNotification$_store(builder build_0, (int, int, slice, slice) v) inline;

;; $JettonTransferNotification$_store_cell
cell $JettonTransferNotification$_store_cell((int, int, slice, slice) v) inline;

;; $JettonBurn$_load
(slice, ((int, int, slice, cell))) $JettonBurn$_load(slice sc_0) inline;

;; $JettonExcesses$_store
builder $JettonExcesses$_store(builder build_0, (int) v) inline;

;; $JettonExcesses$_store_cell
cell $JettonExcesses$_store_cell((int) v) inline;

;; $JettonInternalTransfer$_store
builder $JettonInternalTransfer$_store(builder build_0, (int, int, slice, slice, int, slice) v) inline_ref;

;; $JettonInternalTransfer$_store_cell
cell $JettonInternalTransfer$_store_cell((int, int, slice, slice, int, slice) v) inline;

;; $JettonInternalTransfer$_load
(slice, ((int, int, slice, slice, int, slice))) $JettonInternalTransfer$_load(slice sc_0) inline_ref;

;; $JettonInternalTransfer$_load_bounced
(slice, ((int, int))) $JettonInternalTransfer$_load_bounced(slice sc_0) inline;

;; $JettonBurnNotification$_store
builder $JettonBurnNotification$_store(builder build_0, (int, int, slice, slice) v) inline;

;; $JettonBurnNotification$_store_cell
cell $JettonBurnNotification$_store_cell((int, int, slice, slice) v) inline;

;; $JettonBurnNotification$_load_bounced
(slice, ((int, int))) $JettonBurnNotification$_load_bounced(slice sc_0) inline;

;; $Tip$_load
(slice, ((int, int, slice))) $Tip$_load(slice sc_0) inline;

;; $TweetfiWallet$_store
builder $TweetfiWallet$_store(builder build_0, (int, int, slice, slice, cell) v) inline;

;; $TweetfiWallet$_load
(slice, ((int, int, slice, slice, cell))) $TweetfiWallet$_load(slice sc_0) inline;

;; $StateInit$_get_code
_ $StateInit$_get_code((cell, cell) v) inline;

;; $WalletData$_to_external
(int, slice, slice, cell) $WalletData$_to_external(((int, slice, slice, cell)) v) inline;

;; $TweetfiWallet$init$_store
builder $TweetfiWallet$init$_store(builder build_0, (slice, slice) v) inline;

;; $TweetfiWallet$init$_load
(slice, ((slice, slice))) $TweetfiWallet$init$_load(slice sc_0) inline;

;; $TweetfiWallet$_contract_init
(int, int, slice, slice, cell) $TweetfiWallet$_contract_init(slice $owner, slice $jetton_master) impure inline_ref;

;; $TweetfiWallet$_contract_load
(int, int, slice, slice, cell) $TweetfiWallet$_contract_load() impure inline_ref;

;; $TweetfiWallet$_contract_store
() $TweetfiWallet$_contract_store((int, int, slice, slice, cell) v) impure inline;

;; $global_emptyCell
cell $global_emptyCell() impure inline;

;; $Cell$_fun_asSlice
slice $Cell$_fun_asSlice(cell $self) impure inline;

;; $global_emptySlice
slice $global_emptySlice() impure inline;

;; $global_contractAddress
slice $global_contractAddress((cell, cell) $s) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $Context$_fun_readForwardFee
int $Context$_fun_readForwardFee((int, slice, int, slice) $self) impure inline_ref;

;; $TweetfiWallet$_init_child
(cell, cell) $TweetfiWallet$_init_child(cell sys', slice $owner, slice $jetton_master) inline_ref;

;; $TweetfiWallet$_fun_testtip
((int, int, slice, slice, cell), int) $TweetfiWallet$_fun_testtip((int, int, slice, slice, cell) $self) impure inline_ref;

;; $TweetfiWallet$_fun_get_illiquid_balance
((int, int, slice, slice, cell), slice) $TweetfiWallet$_fun_get_illiquid_balance((int, int, slice, slice, cell) $self) impure inline_ref;

;; $TweetfiWallet$_fun_calculate_jetton_wallet_init
((int, int, slice, slice, cell), (cell, cell)) $TweetfiWallet$_fun_calculate_jetton_wallet_init((int, int, slice, slice, cell) $self, slice $owner_address) impure inline;

;; $TweetfiWallet$_fun__internal_transfer_validate
((int, int, slice, slice, cell), ()) $TweetfiWallet$_fun__internal_transfer_validate((int, int, slice, slice, cell) $self, (int, slice, int, slice) $ctx, (int, int, slice, slice, int, slice) $msg) impure inline;

;; $TweetfiWallet$_fun__internal_transfer_estimate_remain_value
((int, int, slice, slice, cell), int) $TweetfiWallet$_fun__internal_transfer_estimate_remain_value((int, int, slice, slice, cell) $self, (int, slice, int, slice) $ctx, (int, int, slice, slice, int, slice) $msg) impure inline;

;; $SendParameters$_constructor_to_value_mode_bounce_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_bounce_body(slice to, int value, int mode, int bounce, cell body) inline;

;; $JettonTransferNotification$_constructor_query_id_amount_sender_forward_payload
((int, int, slice, slice)) $JettonTransferNotification$_constructor_query_id_amount_sender_forward_payload(int query_id, int amount, slice sender, slice forward_payload) inline;

;; $TweetfiWallet$_fun__internal_transfer_notification
((int, int, slice, slice, cell), ()) $TweetfiWallet$_fun__internal_transfer_notification((int, int, slice, slice, cell) $self, (int, slice, int, slice) $ctx, (int, int, slice, slice, int, slice) $msg) impure inline;

;; $SendParameters$_constructor_to_value_bounce_mode_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_bounce_mode_body(slice to, int value, int bounce, int mode, cell body) inline;

;; $JettonExcesses$_constructor_query_id
((int)) $JettonExcesses$_constructor_query_id(int query_id) inline;

;; $TweetfiWallet$_fun__internal_transfer_excesses
((int, int, slice, slice, cell), ()) $TweetfiWallet$_fun__internal_transfer_excesses((int, int, slice, slice, cell) $self, (int, slice, int, slice) $ctx, (int, int, slice, slice, int, slice) $msg, int $remain) impure inline;

;; $TweetfiWallet$_fun__burn_validate
((int, int, slice, slice, cell), ()) $TweetfiWallet$_fun__burn_validate((int, int, slice, slice, cell) $self, (int, slice, int, slice) $ctx, (int, int, slice, cell) $msg) impure inline;

;; $JettonBurnNotification$_constructor_query_id_amount_sender_response_destination
((int, int, slice, slice)) $JettonBurnNotification$_constructor_query_id_amount_sender_response_destination(int query_id, int amount, slice sender, slice response_destination) inline;

;; $TweetfiWallet$_fun__burn_tokens
((int, int, slice, slice, cell), ()) $TweetfiWallet$_fun__burn_tokens((int, int, slice, slice, cell) $self, (int, slice, int, slice) $ctx, (int, int, slice, cell) $msg) impure inline;

;; $TweetfiWallet$_fun__transfer_validate
((int, int, slice, slice, cell), ()) $TweetfiWallet$_fun__transfer_validate((int, int, slice, slice, cell) $self, (int, slice, int, slice) $ctx, (int, int, slice, slice, cell, int, slice) $msg) impure inline;

;; $TweetfiWallet$_fun__transfer_estimate_remain_value
((int, int, slice, slice, cell), ()) $TweetfiWallet$_fun__transfer_estimate_remain_value((int, int, slice, slice, cell) $self, (int, slice, int, slice) $ctx, (int, int, slice, slice, cell, int, slice) $msg) impure inline;

;; $SendParameters$_constructor_to_value_bounce_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_bounce_mode_body_code_data(slice to, int value, int bounce, int mode, cell body, cell code, cell data) inline;

;; $JettonInternalTransfer$_constructor_query_id_amount_response_address_from_forward_ton_amount_forward_payload
((int, int, slice, slice, int, slice)) $JettonInternalTransfer$_constructor_query_id_amount_response_address_from_forward_ton_amount_forward_payload(int query_id, int amount, slice response_address, slice from, int forward_ton_amount, slice forward_payload) inline;

;; $TweetfiWallet$_fun__transfer_jetton
((int, int, slice, slice, cell), ()) $TweetfiWallet$_fun__transfer_jetton((int, int, slice, slice, cell) $self, (int, slice, int, slice) $ctx, (int, int, slice, slice, cell, int, slice) $msg) impure inline;

;; $WalletData$_constructor_balance_owner_jetton_jetton_wallet_code
((int, slice, slice, cell)) $WalletData$_constructor_balance_owner_jetton_jetton_wallet_code(int balance, slice owner, slice jetton, cell jetton_wallet_code) inline;

;; $TweetfiWallet$_fun_get_wallet_data
((int, int, slice, slice, cell), (int, slice, slice, cell)) $TweetfiWallet$_fun_get_wallet_data((int, int, slice, slice, cell) $self) impure inline_ref;

;; $JettonTransfer$_constructor_query_id_amount_destination_response_destination_custom_payload_forward_ton_amount_forward_payload
((int, int, slice, slice, cell, int, slice)) $JettonTransfer$_constructor_query_id_amount_destination_response_destination_custom_payload_forward_ton_amount_forward_payload(int query_id, int amount, slice destination, slice response_destination, cell custom_payload, int forward_ton_amount, slice forward_payload) inline;

;; $JettonBurn$_constructor_query_id_amount_response_destination_custom_payload
((int, int, slice, cell)) $JettonBurn$_constructor_query_id_amount_response_destination_custom_payload(int query_id, int amount, slice response_destination, cell custom_payload) inline;
